/*
 * Copyright (c) 2007-2013 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.apache.tools.ant.filters.ReplaceTokens

dependencies {

  compile project( ':multitool-core' )

  compile group: 'cascading', name: 'cascading-hadoop2-mr1', version: cascadingVersion

  provided( group: 'org.apache.hadoop', name: 'hadoop-common', version: hadoop2Version )
  provided( group: 'org.apache.hadoop', name: 'hadoop-client', version: hadoop2Version )
  provided group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion

  testCompile project( ':multitool-platform' ).sourceSets.test.runtimeClasspath
  testCompile group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: hadoop2Version 
  testCompile group: 'org.apache.hadoop', name: 'hadoop-minicluster', version: hadoop2Version 
  testCompile group: 'cascading', name: 'cascading-core', version: cascadingVersion, classifier: 'tests', changing: true
  testCompile group: 'cascading', name: 'cascading-hadoop2-mr1', version: cascadingVersion, classifier: 'tests', changing: true
  testCompile group: 'cascading', name: 'cascading-platform', version: cascadingVersion, classifier: 'tests', changing: true
  testCompile group: 'commons-io', name: 'commons-io', version: commonsIoVersion

}

sourceSets {
  main {
    java {
      srcDirs += project(":multitool-hadoop").sourceSets.main.java
    }
  }
}

jar {
  description = "Assembles a Hadoop ready jar file"
  archiveName = jarName
  from sourceSets.main.output
  into( "multitool" ) {
    from( "../version.properties" ) {
      filter( ReplaceTokens, tokens: [
              'releasedate': "${buildDate}".toString(),
              'commit': "${commit}".toString()
      ] )
    }
    if( !System.properties[ 'multitool.release.final' ] )
      from "${rootProject.buildDir}/build.number.properties" 
  }
  manifest {
    attributes "Main-Class": "multitool/Main",
            'Build-Time': "${buildTimestamp}"
  }

  doFirst {
    into( 'lib' ) {
      from( configurations.runtime )
    }

  }
}
