/*
 * Copyright (c) 2007-2015 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
  repositories {
      mavenCentral()
  }

  dependencies {
      classpath 'eu.appsatori:gradle-fatjar-plugin:0.2-rc1'
  }
}

apply plugin: 'fatjar'

dependencies {

  compile project( ':multitool-core' )

  testCompile project( ':multitool-platform' ).sourceSets.test.runtimeClasspath

  compile group: 'cascading', name: 'cascading-local', version: cascadingVersion, changing: true

  compile group: 'log4j', name: 'log4j', version: log4jVersion
  compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
  compile group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4jVersion

  testCompile group: 'cascading', name: 'cascading-core', version: cascadingVersion, classifier: 'tests', changing: true
  testCompile group: 'cascading', name: 'cascading-local', version: cascadingVersion, classifier: 'tests', changing: true
  testCompile group: 'cascading', name: 'cascading-platform', version: cascadingVersion, classifier: 'tests', changing: true
}

fatJar {
  archiveName  = jarName
  exclude 'META-INF/*.DSA'
  exclude 'META-INF/LICENSE*'
  into( "multitool" ) {
    from( "version.properties" ) {
      filter( ReplaceTokens, tokens: [
              'releasedate': "${buildDate}".toString(),
              'commit': "${commit}".toString()
      ] )
    }
    if( !System.properties[ 'multitool.release.final' ] )
      from "${rootProject.buildDir}/build.number.properties"
  }
  
  manifest {
    attributes "Main-Class": "multitool/Main",
            'Build-Time': "${buildTimestamp}"
  }
}

artifacts {
  archives fatJar
}
